"use strict";(self.webpackChunkwhg_training_resources=self.webpackChunkwhg_training_resources||[]).push([[5107],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>g});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),l=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},m=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,s=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=l(a),h=i,g=d["".concat(p,".").concat(h)]||d[h]||c[h]||s;return a?n.createElement(g,r(r({ref:t},m),{},{components:a})):n.createElement(g,r({ref:t},m))}));function g(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=a.length,r=new Array(s);r[0]=h;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:i,r[1]=o;for(var l=2;l<s;l++)r[l]=a[l];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},8079:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=a(7462),i=(a(7294),a(3905));const s={sidebar_position:2},r="A first look at Gapminder data",o={unversionedId:"data_visualisation/data_visualisation_with_ggplot2/gapminder",id:"data_visualisation/data_visualisation_with_ggplot2/gapminder",title:"A first look at Gapminder data",description:"We'll use real population data from gapminder.org. To load it, load",source:"@site/docs/data_visualisation/data_visualisation_with_ggplot2/001_gapminder.md",sourceDirName:"data_visualisation/data_visualisation_with_ggplot2",slug:"/data_visualisation/data_visualisation_with_ggplot2/gapminder",permalink:"/whg-training-resources/data_visualisation/data_visualisation_with_ggplot2/gapminder",draft:!1,editUrl:"https://github.com/whg-training/whg-training-resources/edit/main/docs/data_visualisation/data_visualisation_with_ggplot2/001_gapminder.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"sidebar3",previous:{title:"More data visualisation in R",permalink:"/whg-training-resources/data_visualisation/data_visualisation_with_ggplot2/"},next:{title:"The distribution of GDP per capita",permalink:"/whg-training-resources/data_visualisation/data_visualisation_with_ggplot2/distribution"}},p={},l=[{value:"What&#39;s Gapminder?",id:"whats-gapminder",level:2},{value:"A warmup plot",id:"a-warmup-plot",level:2}],m={toc:l},d="wrapper";function c(e){let{components:t,...s}=e;return(0,i.kt)(d,(0,n.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"a-first-look-at-gapminder-data"},"A first look at Gapminder data"),(0,i.kt)("p",null,"We'll use real population data from ",(0,i.kt)("a",{parentName:"p",href:"https://www.gapminder.org"},"gapminder.org"),". To load it, load\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"gapminder")," library:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"library(gapminder)\n")),(0,i.kt)("p",null,"The gapminder data is now in a variable called ",(0,i.kt)("inlineCode",{parentName:"p"},"gapminder")," - we'll use this a lot so let's start by\nrenaming it to something shorter:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-{r",metastring:"gapminder}","gapminder}":!0},"d <- gapminder\nView(d)\n# or just head(d) if not in RStudio\n")),(0,i.kt)("h2",{id:"whats-gapminder"},"What's Gapminder?"),(0,i.kt)("p",null,"The data contains measurements of life expectancy, population size, and gross domestic product\n(GDP) per capita for different years. The simplest way to see what's in there is to create some\nsummaries using the ",(0,i.kt)("inlineCode",{parentName:"p"},"table")," function:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-{r",metastring:"gapminder_tables}","gapminder_tables}":!0},"table( d$year )\nlength( unique( d$country ))\n")),(0,i.kt)("p",null,"Evidently the data contains entries for 12 years (with 5-year gaps between) and 142 countries.\nAre all 142 countries represented at all 12 timepoints?"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"stopifnot( nrow(d) == (12 * 142) )\nView( table(d$country, d$year) )\n")),(0,i.kt)("p",null,"Yes they are!"),(0,i.kt)("h2",{id:"a-warmup-plot"},"A warmup plot"),(0,i.kt)("p",null,"As a warmup let's use ",(0,i.kt)("inlineCode",{parentName:"p"},"ggplot")," to show the distribution of the continuous variables in the data:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-R"},"p = ggplot( data = d )\nprint( p + geom_histogram( aes( x = lifeExp ), bins = 25 ))\nprint( p + geom_histogram( aes( x = gdpPercap ), bins = 25 ))\nprint( p + geom_histogram( aes( x = pop ), bins = 25 ))\n")),(0,i.kt)("p",null,"This code illustrates how ggplot2 works: it creates a plot object (",(0,i.kt)("inlineCode",{parentName:"p"},"p")," above) that is associated\nwith some data; then 'layers' are added to draw things, such as the histogram layer above. What's\nmore, the layers are associated with ",(0,i.kt)("em",{parentName:"p"},"aesthetic mappings")," (",(0,i.kt)("inlineCode",{parentName:"p"},"aes()")," in the above) which tell ggplot\nhow the data variables should be mapped onto visual parameters (that is, things like bar height,\npoint size or colour, say.)  It should look something like this:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img",src:a(2201).Z,width:"500",height:"300"})),(0,i.kt)("p",null,"A less obvious but essential feature is that the way these data -> visual mappings are presented is\ngoverned by ",(0,i.kt)("em",{parentName:"p"},"scales"),". In the above, the scales are implicit (both x and y scales are linear). But\nfor example, we could alter the ",(0,i.kt)("inlineCode",{parentName:"p"},"x")," scale of our plot so that bars are drawn in log space:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"print(\n    p\n    + geom_histogram( aes( x = pop), bins = 25 )\n    + scale_x_log10()\n)\n")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img",src:a(3879).Z,width:"400",height:"300"})),(0,i.kt)("p",null,"Compare these last two plots - it might take you a few moments to see exactly what has happened. If\nyou compare the x axes you'll see that they both have the same overall range - they go roughly up\nto ",(0,i.kt)("inlineCode",{parentName:"p"},"1e09")," (whjich of course means ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mn",{parentName:"mrow"},"1"),(0,i.kt)("mo",{parentName:"mrow"},"\xd7"),(0,i.kt)("mn",{parentName:"mrow"},"1"),(0,i.kt)("msup",{parentName:"mrow"},(0,i.kt)("mn",{parentName:"msup"},"0"),(0,i.kt)("mn",{parentName:"msup"},"9"))),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1\\times 10^9")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"1"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.kt)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8141em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"1"),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"},"0"),(0,i.kt)("span",{parentName:"span",className:"msupsub"},(0,i.kt)("span",{parentName:"span",className:"vlist-t"},(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,i.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,i.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,i.kt)("span",{parentName:"span",className:"mord mtight"},"9")))))))))))),", i.e. 1 billion.) But in the second plot every\ntick represents a point 10 times larger than the one below, that is, it is a log scale, while in\nthe first version the scale is linear."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Questions")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ol",{parentName:"div"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Which version of the plot does a better job of presenting the data?")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Look at the histogram bars.  Is the histogram binning done ",(0,i.kt)("em",{parentName:"p"},"before")," the transformation to log-scale, or after it?"))))),(0,i.kt)("p",null,"A subtly different plot is produced if we ",(0,i.kt)("em",{parentName:"p"},"log-transform the data")," instead of changing the scale:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-R"},"print(\n    p\n    + geom_histogram( aes( x = log10(pop)), bins = 25 )\n)\n")),(0,i.kt)("p",null,"The plotted bars themselves look identical, but if you look closely you'll see the X axis scale has\nchanged to reflect the log values instead. Which one of these is better probably depends on the context."),(0,i.kt)("p",null,"For me, neither of the above plots is perfect - I want a plot that can be understood at a glance,\nwhich means including very clear axis labels. Something like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-R"},'print(\n    p\n    + geom_histogram( aes( x = pop), bins = 25 )\n    + scale_x_log10(\n        breaks = 10^c( 5, 6, 7, 8, 9 ),\n        labels = c(  "100 thousand", "1 million", "10 million", "100 million", "1 billion" )\n    )\n    + xlab( "Population size" )\n    + ylab( "Number of countries" )\n)\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img",src:a(3894).Z,width:"400",height:"300"})),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Question")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Most countries in this data have between about 1 and 100 million individuals in - a few have much\nlarger or smaller populations. Only two countries have populations larger than a billion. What are\nthey? Try finding out:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre"},"d[ d$pop > 1E9 & d$year == '2007', ]\n")))),(0,i.kt)("p",null,"In the rest of this tutorial we'll use ggplot2 to explore the gapminder dataset in more detail. "),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"As\nwith other R objects, you can find documentation on ggplot2 using R's in-built help - for example\nto find out how the above works:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-R"},"?scale_x_log10\n")),(0,i.kt)("p",{parentName:"div"},"ggplot2 also has ",(0,i.kt)("a",{parentName:"p",href:"https://ggplot2.tidyverse.org"},"extensive online documentation")," including a useful\ncheatsheet."))))}c.isMDXComponent=!0},2201:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pop1-1810abdae730d771998235a23fc6bf24.png"},3879:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pop2-0ff66149bb0126fa312589bbf8757086.png"},3894:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pop4-4597fe8cd34500edaa77f80320440b9f.png"}}]);