"use strict";(self.webpackChunkwhg_training_resources=self.webpackChunkwhg_training_resources||[]).push([[1436],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=m(n),d=s,h=u["".concat(p,".").concat(d)]||u[d]||c[d]||r;return n?a.createElement(h,i(i({ref:t},l),{},{components:n})):a.createElement(h,i({ref:t},l))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,i=new Array(r);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:s,i[1]=o;for(var m=2;m<r;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9940:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>m});var a=n(7462),s=(n(7294),n(3905));const r={sidebar_position:6},i="Functions",o={unversionedId:"programming/introduction_to_R/functions",id:"programming/introduction_to_R/functions",title:"Functions",description:"So far so good - you can create variables and do computations.  To do really useful things, though, you need to use",source:"@site/docs/programming/introduction_to_R/functions.md",sourceDirName:"programming/introduction_to_R",slug:"/programming/introduction_to_R/functions",permalink:"/whg-training-resources/programming/introduction_to_R/functions",draft:!1,editUrl:"https://github.com/whg-training/whg-training-resources/edit/main/docs/programming/introduction_to_R/functions.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"sidebar5",previous:{title:"Some other data types",permalink:"/whg-training-resources/programming/introduction_to_R/data_types"},next:{title:"Getting around",permalink:"/whg-training-resources/programming/introduction_to_R/getting_around"}},p={},m=[{value:"Examples",id:"examples",level:2},{value:"Square roots",id:"square-roots",level:3},{value:"Trigonometry",id:"trigonometry",level:3},{value:"Functions with more than one argument",id:"functions-with-more-than-one-argument",level:2},{value:"Many values make light work",id:"many-values-make-light-work",level:3},{value:"Named arguments",id:"named-arguments",level:2},{value:"Generating random numbers",id:"generating-random-numbers",level:2},{value:"Formatting strings",id:"formatting-strings",level:2},{value:"Getting help",id:"getting-help",level:2},{value:"Writing your own functions",id:"writing-your-own-functions",level:2},{value:"Example: the logistic function",id:"example-the-logistic-function",level:2}],l={toc:m},u="wrapper";function c(e){let{components:t,...r}=e;return(0,s.kt)(u,(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"functions"},"Functions"),(0,s.kt)("p",null,"So far so good - you can create variables and do computations.  To do really useful things, though, you need to use\n",(0,s.kt)("strong",{parentName:"p"},"functions"),"."),(0,s.kt)("p",null,"In fact we've seen a few already: we used the ",(0,s.kt)("inlineCode",{parentName:"p"},"seq()"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"sum()")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"plot()")," functions on ",(0,s.kt)("a",{parentName:"p",href:"/whg-training-resources/programming/introduction_to_R/vectors"},"this page"),"."),(0,s.kt)("p",null,"These illustrate the general form for using a function, which is:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"function_name_goes_here( function arguments go here )\n")),(0,s.kt)("p",null,"The function does some computation, based on its ",(0,s.kt)("em",{parentName:"p"},"arguments")," in the brackets, and 'returns' its result."),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("h3",{id:"square-roots"},"Square roots"),(0,s.kt)("p",null,"For example let's compute the square root of 1,000:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"> sqrt(1000)\n")),(0,s.kt)("p",null,"Here ",(0,s.kt)("inlineCode",{parentName:"p"},"sqrt")," is the function name and ",(0,s.kt)("inlineCode",{parentName:"p"},"1000")," is the function argument."),(0,s.kt)("h3",{id:"trigonometry"},"Trigonometry"),(0,s.kt)("p",null,"Or we could compute the sine of an angle:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"> sin( pi/4 )\n")),(0,s.kt)("p",null,"(The angle is expressed in radians, so ",(0,s.kt)("inlineCode",{parentName:"p"},"pi/2")," means 45 degreees.)"),(0,s.kt)("h2",{id:"functions-with-more-than-one-argument"},"Functions with more than one argument"),(0,s.kt)("p",null,"If the function takes two or more arguments, seperate them with commas:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"> rep( 2, 5 )\n[1] 2 2 2 2 2\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Note.")," The ",(0,s.kt)("inlineCode",{parentName:"p"},"rep()")," function stands for 'repeat'.  It repeats its first argument as many times as its second argument."),(0,s.kt)("h3",{id:"many-values-make-light-work"},"Many values make light work"),(0,s.kt)("p",null,"Functions, just like everything else, work on vectors.  For example let's generate a sine curve:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"> x = seq( from = 0, to = 2*pi, by = 0.01 )\n> y = sin(x)\n> print(y)\n")),(0,s.kt)("p",null,"and plot it:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"> plot( x, y, type = 'l' )\n")),(0,s.kt)("h2",{id:"named-arguments"},"Named arguments"),(0,s.kt)("p",null,"These examples also illustrate another feature of functions: ",(0,s.kt)("strong",{parentName:"p"},"named arguments"),". In this case ",(0,s.kt)("inlineCode",{parentName:"p"},"plot()")," has an argument\nnamed ",(0,s.kt)("inlineCode",{parentName:"p"},"type")," which you can specify by giving its name.  Here, ",(0,s.kt)("inlineCode",{parentName:"p"},"type='l'")," tells it to draw the result as a line.  "),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Question")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"What do you get if you don't include the ",(0,s.kt)("inlineCode",{parentName:"p"},"type='l'")," argument?"))),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"plot()")," actually has about a zillion arguments, but they all have names and most of them have ",(0,s.kt)("strong",{parentName:"p"},"default values"),", so\nyou only have to specify the ones you want to change.  For example another argument is ",(0,s.kt)("inlineCode",{parentName:"p"},"xlab")," which specifies the x axis\nlabel:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"> plot( x, y, type = 'l', xlab = \"Angle in radians\" )\n")),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Challenge")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Give the plot a sensible y axis label (",(0,s.kt)("inlineCode",{parentName:"p"},"ylab"),") as well.  And also get rid of the 'box' round the outside by setting the 'box type' to 'n' (",(0,s.kt)("inlineCode",{parentName:"p"},"bty='n'"),")."))),(0,s.kt)("h2",{id:"generating-random-numbers"},"Generating random numbers"),(0,s.kt)("p",null,"There are loads of other functions. For example we could ",(0,s.kt)("strong",{parentName:"p"},"generate some random numbers")," between 0 and 1 using\n",(0,s.kt)("inlineCode",{parentName:"p"},"runif()"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"> runif( n = 10 )\n [1] 0.7972164 0.6796878 0.3802085 0.8871665 0.0827587 0.6847181 0.5019356 0.5859209\n [9] 0.5115309 0.1100913\n")),(0,s.kt)("p",null,"(You'll get a different values of course - they're random.)"),(0,s.kt)("p",null,"A natural thing to do with random numbers is ",(0,s.kt)("strong",{parentName:"p"},"histogram")," them:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"> x = runif( n = 100 )\n> hist( x )\n")),(0,s.kt)("p",null,"Or we could compute their ",(0,s.kt)("em",{parentName:"p"},"mean")," or ",(0,s.kt)("em",{parentName:"p"},"average"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"> mean(x)\n")),(0,s.kt)("h2",{id:"formatting-strings"},"Formatting strings"),(0,s.kt)("p",null,"A very useful function is ",(0,s.kt)("inlineCode",{parentName:"p"},"sprintf()")," which can be used to format numbers into strings.\nFor example to convert the number 5 to a string:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'> sprintf( "%d" % 5 )\n')),(0,s.kt)("p",null,"The first argument is the ",(0,s.kt)("strong",{parentName:"p"},"format string"),", which here uses '%d' to say 'format a decimal integer here'.",(0,s.kt)("br",{parentName:"p"}),"\n","The other arguments are the values to be formatted."),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"sprintf()")," is useful to do general formatting.  For example, to list some filenames:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'> sprintf( "/path/to/images/image%d.jpg", 1:10 )\n')),(0,s.kt)("p",null,"Or to print out some diagnostics:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'> n = 10\n> k = 5\n> sprintf( "There are %d ways to choose %d objects from a set of %d.", choose(n,k), k, n )\n')),(0,s.kt)("h2",{id:"getting-help"},"Getting help"),(0,s.kt)("p",null,"At this point, you may be wondering how you find out what a function does or what its arguments are. This where the\nhelp system comes in."),(0,s.kt)("p",null,"E.g. let's use the help function to find out what ",(0,s.kt)("inlineCode",{parentName:"p"},"runif")," does:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"> ?runif\n")),(0,s.kt)("p",null,"You'll see that ",(0,s.kt)("inlineCode",{parentName:"p"},"runif")," is one of several functions for dealing with 'uniform' distributions (that is, where all values\nin a range are equally likely).  And it has some other arguments that can be used to alter how it behaves. "),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Question")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Have a look at the documentation now and see if you can make sense of it.  How would you use ",(0,s.kt)("inlineCode",{parentName:"p"},"runif")," to simulate 10\nrandom numbers between 1000 and 2000?"))),(0,s.kt)("p",null,"R help files are a bit of a mixed bag - they tend to have lots of details, but aren't always easy to read.  Still they are a good first port of call when you want to figure something out.  If still confused, a web search might also help."),(0,s.kt)("p",null,"Another way to search the help is with the double question mark form:"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"> ??runif")),(0,s.kt)("p",null,"This will show you anything in the documentation that matches 'runif' or something close to it - a lot of results!\nSomewhere in that list will be ",(0,s.kt)("inlineCode",{parentName:"p"},"stats::Uniform")," which is the page we were just looking at."),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Question")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Look up the documentation for ",(0,s.kt)("inlineCode",{parentName:"p"},"sin()"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"exp()"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"log()"),", or ",(0,s.kt)("inlineCode",{parentName:"p"},"sqrt()"),"\nHow could you plot the cosine of an angle, the exponential or logarithm or square root of a number?\nMake sure you understand how this works."))),(0,s.kt)("h2",{id:"writing-your-own-functions"},"Writing your own functions"),(0,s.kt)("p",null,"Everything we're doing here is done by ",(0,s.kt)("strong",{parentName:"p"},"calling built-in functions")," to compute or plot some values.  Built-in\nfunctions are great!  But what if you want your own?"),(0,s.kt)("p",null,"Well, this is easy too.  For example, let's write a function that converts a string to lower case, and then repeats it\ntwenty times:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"> repeat_it = function( a_string ) {\n    rep( tolower( a_string ), 20 )\n}\n")),(0,s.kt)("p",null,"Our function uses the ",(0,s.kt)("inlineCode",{parentName:"p"},"tolower()")," built-in function to convert the case, and the ",(0,s.kt)("inlineCode",{parentName:"p"},"rep()")," built-in function (read its help!) to repeat the string.  Try it out:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'> repeat_it( "Repeat this!" )\n')),(0,s.kt)("p",null,"Of course this function is silly - what if we want to repeat it 100 times instead?  Let's give the function a\n",(0,s.kt)("inlineCode",{parentName:"p"},"number_of_repeats")," argument:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"> repeat_it = function( a_string, number_of_repeats = 20 ) {\n    rep( tolower( a_string ), number_of_repeats )\n}\n")),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Question")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Make sure you know how to call this function to repeat a string (say) twice or a hundred times.",(0,s.kt)("br",{parentName:"p"}),"\n","What happens if you repeat a million times?"))),(0,s.kt)("p",null,"Functions like this work just like built-in functions, but you get to write them yourself.  They are defined using the\n",(0,s.kt)("inlineCode",{parentName:"p"},"function")," keyword followed by a list of arguments inside brackets ",(0,s.kt)("inlineCode",{parentName:"p"},"()"),".  The *",(0,s.kt)("em",{parentName:"p"},"body")," of the function (i.e. the code it\nruns) goes straight afterwards, in between curly braces ",(0,s.kt)("inlineCode",{parentName:"p"},"{}"),".  Then the function returns the value of the last statement."),(0,s.kt)("h2",{id:"example-the-logistic-function"},"Example: the logistic function"),(0,s.kt)("p",null,"Let's use our skills to plot the ",(0,s.kt)("strong",{parentName:"p"},"logistic function"),".  It maps the real numbers into ","[0,1]"," and is defined as"),(0,s.kt)("div",{className:"math math-display"},(0,s.kt)("span",{parentName:"div",className:"katex-display"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"x"),(0,s.kt)("mo",{parentName:"mrow"},"\u21a6"),(0,s.kt)("mfrac",{parentName:"mrow"},(0,s.kt)("msup",{parentName:"mfrac"},(0,s.kt)("mi",{parentName:"msup"},"e"),(0,s.kt)("mi",{parentName:"msup"},"x")),(0,s.kt)("mrow",{parentName:"mfrac"},(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"e"),(0,s.kt)("mi",{parentName:"msup"},"x"))))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"x \\mapsto \\frac{e^x}{1+e^x}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.522em",verticalAlign:"-0.011em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"\u21a6"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"2.1107em",verticalAlign:"-0.7693em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mopen nulldelimiter"}),(0,s.kt)("span",{parentName:"span",className:"mfrac"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"1.3414em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.314em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.5904em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.989em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"x")))))))))),(0,s.kt)("span",{parentName:"span",style:{top:"-3.23em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"frac-line",style:{borderBottomWidth:"0.04em"}})),(0,s.kt)("span",{parentName:"span",style:{top:"-3.677em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.6644em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"x"))))))))))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.7693em"}},(0,s.kt)("span",{parentName:"span"}))))),(0,s.kt)("span",{parentName:"span",className:"mclose nulldelimiter"}))))))),(0,s.kt)("p",null,"In R we can define it as:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"> logistic = function(x) {\n    exp(x) / ( 1 + exp(x) )\n}\n")),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Challenge")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Plot the logistic function over a range from -5 to 5."),(0,s.kt)("p",{parentName:"div"},(0,s.kt)("strong",{parentName:"p"},"Hint."),"  Create a variable ",(0,s.kt)("inlineCode",{parentName:"p"},"x")," with a range of values from -5 to 5 using the ",(0,s.kt)("inlineCode",{parentName:"p"},"seq()")," function.  Then create a variable\n",(0,s.kt)("inlineCode",{parentName:"p"},"y")," with the values of the logistic function applied to ",(0,s.kt)("inlineCode",{parentName:"p"},"x"),".  Finally, plot ",(0,s.kt)("inlineCode",{parentName:"p"},"y")," against ",(0,s.kt)("inlineCode",{parentName:"p"},"x"),"."),(0,s.kt)("p",{parentName:"div"},"For ",(0,s.kt)("strong",{parentName:"p"},"maximum kudos")," your plot should be drawn as a line, have nice axis labels and no 'box' around it!  So it should look something like this:"),(0,s.kt)("p",{parentName:"div"},(0,s.kt)("img",{alt:"img",src:n(9929).Z,width:"400",height:"300"})))))}c.isMDXComponent=!0},9929:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/logistic-75b2a7abdd6057f468e77a37c5f92624.png"}}]);