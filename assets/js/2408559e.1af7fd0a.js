"use strict";(self.webpackChunkwhg_training_resources=self.webpackChunkwhg_training_resources||[]).push([[5163],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(a),m=o,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||i;return a?n.createElement(h,r(r({ref:t},d),{},{components:a})):n.createElement(h,r({ref:t},d))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,r=new Array(i);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5691:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(7462),o=(a(7294),a(3905));const i={sidebar_position:100},r="Estimating allele frequencies",l={unversionedId:"statistical_modelling/introduction/allele_frequencies",id:"statistical_modelling/introduction/allele_frequencies",title:"Estimating allele frequencies",description:"Let's use Bayes to estimate allele frequencies - quantifying our uncertainty - for a couple of important",source:"@site/docs/statistical_modelling/introduction/allele_frequencies.md",sourceDirName:"statistical_modelling/introduction",slug:"/statistical_modelling/introduction/allele_frequencies",permalink:"/whg-training-resources/statistical_modelling/introduction/allele_frequencies",draft:!1,editUrl:"https://github.com/whg-training/whg-training-resources/edit/main/docs/statistical_modelling/introduction/allele_frequencies.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{sidebar_position:100},sidebar:"sidebar6",previous:{title:"What to make of a COVID test",permalink:"/whg-training-resources/statistical_modelling/introduction/covid"},next:{title:"Probability cheatsheet",permalink:"/whg-training-resources/statistical_modelling/probability_cheatsheet"}},s={},p=[{value:"Plotting the posterior",id:"plotting-the-posterior",level:2},{value:"Plotting multiple populations",id:"plotting-multiple-populations",level:2}],d={toc:p},u="wrapper";function c(e){let{components:t,...i}=e;return(0,o.kt)(u,(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"estimating-allele-frequencies"},"Estimating allele frequencies"),(0,o.kt)("p",null,"Let's use ",(0,o.kt)("a",{parentName:"p",href:"/whg-training-resources/statistical_modelling/introduction/bayes"},"Bayes")," to estimate allele frequencies - quantifying our uncertainty - for a couple of important\nvariants in global populations.  Here are the datasets:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Data on the O blood group variant (rs8176719): ",(0,o.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/whg-training/whg-training-resources/main/docs/statistical_modelling/introduction/data/1000_genomes_o_blood_group_grouped.tsv"},"O blood group data"))),(0,o.kt)("p",null,"rs8176719 has two alleles - the functional 'C' allele, and a deletion allele that results in a\n",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Frameshift_mutation"},"frameshift"),".  Individuals that have two copies of the deletion have\n'O' blood group."),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Data on ",(0,o.kt)("strong",{parentName:"li"},"rs61028892"),", a variant that has been associated with ",(0,o.kt)("a",{parentName:"li",href:"https://www.medrxiv.org/content/10.1101/2023.05.16.23289851v1.full"},"control of fetal\nhaemoglobin")," in individuals with sickle cell\ndisease: ",(0,o.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/whg-training/whg-training-resources/main/docs/statistical_modelling/introduction/data/1000_genomes_rs61028892_grouped.tsv"},"rs61028892 data"))),(0,o.kt)("p",null,"Both datasets above come from the ",(0,o.kt)("a",{parentName:"p",href:"https://www.internationalgenome.org/data-portal/data-collection/phase-3"},"1000 Genomes Project Phase 3\ndataset"),"."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Challenge")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Load one or both of these datasets into R using ",(0,o.kt)("inlineCode",{parentName:"p"},"read_tsv()"),".  Then  use ",(0,o.kt)("inlineCode",{parentName:"p"},"dbeta()")," to plot the posterior distribution of\nthe allele frequency and/or the O blood group frequency across all populations and then in individual populations."),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"Hint.")," ",(0,o.kt)("inlineCode",{parentName:"p"},"ggplot()")," is one good way to do this.  Some further tips on this are below."))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Challenge")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Add the posterior mean and lower and upper values forming a 95% credible set to the data frame."),(0,o.kt)("p",{parentName:"div"},"Add 95% credible intervals for each population to the data frame, using ",(0,o.kt)("inlineCode",{parentName:"p"},"qbeta()"),", and then plot these as the estimates\n(points) and 95% confidence intervals"))),(0,o.kt)("h2",{id:"plotting-the-posterior"},"Plotting the posterior"),(0,o.kt)("p",null,"To get ",(0,o.kt)("inlineCode",{parentName:"p"},"ggplot()")," to plot a posterior density for the whole dataset, or for individual populations, is not conceptually\ndifficult - we're just plotting the beta distribution after all.  But does require a bit of complexity in terms of code.\nIn short, ",(0,o.kt)("inlineCode",{parentName:"p"},"ggplot()")," takes a single data frame as data, so you have to build a big dataframe that represents the\nposterior density at a grid of x axis values, for each population you want to plot."),(0,o.kt)("p",null,"You could find lots of ways to do this, but here's one way that is fairly re-useable.  Let's write a function that reads\nin one row of data and generates the dataframe we need.  Rather than hard-code this for the O blood group example, we'll\nmake it work with generic 'reference' and 'alternate' counts (e.g. non-O blood group, and O blood group counts) so it\ncan be re-used for other examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"generate_posterior = function(\n    row,\n    at= seq( from = 0, to = 1, by = 0.01 )\n) {\n    posterior_distribution = dbeta(\n        at,\n        shape1 = row$alternate_count + 1,\n        shape2 = row$reference_count + 1\n    )\n    tibble(\n        population = row$population,\n        reference_count = row$reference_count,\n        alternative_count = row$alternate_count,\n        at = at, \n        value = posterior_distribution\n    )\n}\n")),(0,o.kt)("p",null,"For example, for the O blood group data you could apply this to the whole dataset like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"data = read_tsv( \"https://raw.githubusercontent.com/whg-training/whg-training-resources/main/docs/statistical_modelling/introduction/data/1000_genomes_o_blood_group_grouped.tsv\" )\n\noverall_counts = (\n    data\n    %>% summarise(\n        population = 'all',\n        reference_count = sum( `C/C` + `-/C` ),\n        alternate_count = sum( `-/-` )\n    )\n)\nprint( overall_counts )\noverall_posterior = generate_posterior(\n    overall_counts,\n    at = seq( from = 0, to = 1, by = 0.01 )\n)\n")),(0,o.kt)("p",null,"If you print this, you should see a data frame with 101 rows (one for each of those ",(0,o.kt)("inlineCode",{parentName:"p"},"at")," values) showing the posterior\ndistribution."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Make sure you understand what that data frame is showing.  To recap, it's the ",(0,o.kt)("em",{parentName:"p"},"posterior distribution of the frequency of O blood\ngroup across all populations"),", evaluated at a grid of 101 points between zero and one."),(0,o.kt)("p",{parentName:"div"},"The posterior is a ",(0,o.kt)("a",{parentName:"p",href:"/whg-training-resources/statistical_modelling/introduction/some_distributions"},"beta distribution")," so we used ",(0,o.kt)("inlineCode",{parentName:"p"},"dbeta()")," to compute it."))),(0,o.kt)("p",null,"Want to plot it?  No problem!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"p = (\n    ggplot( data = overall_posterior )\n    + geom_line( aes( x = at, y = value ))\n)\nprint(p)\n")),(0,o.kt)("p",null,"Ok that's not good enough.  Let's zoom in:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"print( p + xlim( 0.35, 0.55 ))\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Challenge")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Ok that's not good enough either.  Here are some things you should do to fix it."),(0,o.kt)("ol",{parentName:"div"},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Does your plot look kind of jagged-y?  That's because the posterior distribution is concentrated around a small region (almost all the mass is between about 0.4 and 0.47), but we have only evaluated on a grid of 101 points across the interval.  To fix this, ",(0,o.kt)("em",{parentName:"p"},"increase the number of grid points")," (i.e. the ",(0,o.kt)("inlineCode",{parentName:"p"},"at")," variable above) and replot.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Always give your plots meaningful x axis and y axis labels"),".  (Otherwise you'll just waste people's time making them ask what they are).  The ",(0,o.kt)("inlineCode",{parentName:"p"},"xlab()")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ylab()")," functions can be used for this, e.g.:"))),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-r"},'p = (\n    ggplot( data = overall_posterior )\n    + geom_line( aes( x = at, y = value ))\n    + xlab( "My x axis label" )\n    + ylab( "My y axis label" )\n)\nprint(p)\n')),(0,o.kt)("ol",{parentName:"div",start:3},(0,o.kt)("li",{parentName:"ol"},"Let's get rid of the grey background and make the text bigger, using 'theme_minimal()`:")),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre"},"print( p + theme_minimal(16) )\n")),(0,o.kt)("ol",{parentName:"div",start:4},(0,o.kt)("li",{parentName:"ol"},"Personally, I don't like that the y axis label is printed at 90 degrees to the reading direction - do you?  That can\nbe fixed too with a bit of ggplot magic, which I always have to ",(0,o.kt)("a",{parentName:"li",href:"https://ggplot2.tidyverse.org"},"look up in the\ndocumentation")," - it looks like this:")),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-r"},"print(\n    p\n    + theme_minimal(16)\n    + theme(\n        axis.title.y = element_text( angle = 0, vjust = 0.5 )\n    )\n)\n")),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"Note"),". you have to do this call to ",(0,o.kt)("inlineCode",{parentName:"p"},"theme()")," ",(0,o.kt)("em",{parentName:"p"},"after")," ",(0,o.kt)("inlineCode",{parentName:"p"},"theme_minimal()"),", otherwise it resets this property."),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"Challenge")," Put all this together to make a final plot of the posterior distribution now.  It should look something like this:"),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("img",{alt:"img",src:a(8991).Z,width:"963",height:"436"})))),(0,o.kt)("p",null,"Congratulations!  "),(0,o.kt)("h2",{id:"plotting-multiple-populations"},"Plotting multiple populations"),(0,o.kt)("p",null,"Plotting multiple populations ought to be easy now - we just somehow need to call ",(0,o.kt)("inlineCode",{parentName:"p"},"generate_posterior()")," for each row of\nour data, instead of for the whole set.  One way to do that is simple to loop over the rows and accumulate the results:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"per_population_posterior = tibble()\nfor( i in 1:nrow( data )) {\n    # summarise one row, as before\n    population_data = (\n        X[i,]   \n        %>%\n        summarise(\n            population = population,\n            reference_count = sum( `C/C` + `-/C` ),\n            alternate_count = sum( `-/-` )\n        )\n    )\n    per_population_posterior = bind_rows(\n        per_population_posterior,\n        generate_posterior( population_data )\n    )\n}\n")),(0,o.kt)("p",null,"If you look at ",(0,o.kt)("inlineCode",{parentName:"p"},"per_population_data")," you should see it has thousands of rows (or tens of thousands if you increased the\nnumber of ",(0,o.kt)("inlineCode",{parentName:"p"},"at")," values), the same number of rows per population.  You could count them like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"per_population_posterior %>% group_by( population ) %>% summarise( number_of_rows = n() )\n")),(0,o.kt)("p",null,"Getting ggplot to plot this is now easy - we use a ",(0,o.kt)("strong",{parentName:"p"},"facet"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"p = (\n    ggplot( data = per_population_posterior )\n    + geom_line( aes( x = at, y = value ))\n    + facet_grid( population ~ . )\n)\nprint(p)\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:a(6768).Z,width:"1056",height:"1562"})),(0,o.kt)("p",null,"Cool!"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"That ",(0,o.kt)("inlineCode",{parentName:"p"},"facet_grid()")," call works like this.  You give it two variables to facet over rows and columns of the result, and write ",(0,o.kt)("inlineCode",{parentName:"p"},"variable1 ~ variable2"),".\nIn our case, we just want to facet over one variable rows, so we do ",(0,o.kt)("inlineCode",{parentName:"p"},"population ~ ."),".  "),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("inlineCode",{parentName:"p"},"ggplot()")," then does all the work of splitting up the data up into each of the facets and arranges the plot into rows and columns.\nIt's a very powerful feature for quickly exploring datasets."))),(0,o.kt)("p",null,"As usual, this initial plot isn't quite good enough to start with.  We should do several things:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Those y axis scales are useless - too hard to see. We should get rid of them."),(0,o.kt)("li",{parentName:"ol"},"The facet labels (on the right) are useless as well!  We can't see the population names."),(0,o.kt)("li",{parentName:"ol"},"A more subtle bug is that the posteriors all have slightly different heights (depending on how spread-out the\ndistribution is).  But at the moment they all have the same scale.")),(0,o.kt)("p",null,"All this can be fixed with suitable calls to ggplot - see the comments below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},'p = (\n    ggplot( data = per_population_posterior )\n    + geom_line( aes( x = at, y = value ))\n    + facet_grid(\n        population ~ .,\n        # Make y axis facets have their own scales, learnt from the data\n        scales = "free_y"\n    )\n    + theme_minimal(16)\n    + xlab( "O blood group frequency" )\n    + ylab( "Posterior density" )\n    + theme(\n        # remove Y axis tick labels\n        axis.text.y = element_blank(),\n        # rotate facet labels on right of plot\n        strip.text.y.right = element_text(angle = 0, hjust = 0),\n        # rotate overall y axis label 90\n        axis.title.y = element_text(angle = 0, vjust = 0.5)\n    )\n\n)\nprint(p)\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:a(1437).Z,width:"2104",height:"1992"})),(0,o.kt)("p",null,"##\xa0Ordering populations"),(0,o.kt)("p",null,"That's all very well, currently the populations are sorted in alphabetical order.  Wouldn't it be nicer to order the\npopulations by allele frequency? "),(0,o.kt)("p",null,"The way to do this in ggplot is not obvious at first glance - you have to re-order the data itself.  In R, there is a\nspecific way to do this known as a ",(0,o.kt)("strong",{parentName:"p"},"factor"),".  A factor is a set of string values that take one of a set of levels.\nYou specify the order of the levels, and voila, the data is ordered."),(0,o.kt)("p",null,"Let's do that now.  First let's compute the frequency in the original data:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"data$O_bld_grp_frequency = data[['-/-']] / ( data[['C/C']] + data[['-/C']] + data[['-/-']])\n")),(0,o.kt)("p",null,"Now let's use that to get an ordered list of populations.  An easy way is to use the ",(0,o.kt)("a",{parentName:"p",href:"https://dplyr.tidyverse.org/reference/arrange.html"},"dplyr ",(0,o.kt)("inlineCode",{parentName:"a"},"arrange()")," function")," to order the dataframe by the frequency, then get the populations:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"ordered_populations = (\n    data\n    %>% arrange( O_bld_grp_frequency )\n)$population\n")),(0,o.kt)("p",null,"Finally, we'll convert the ",(0,o.kt)("inlineCode",{parentName:"p"},"population")," column of ",(0,o.kt)("inlineCode",{parentName:"p"},"per_population_posterior")," to a factor with these levels:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"\nper_population_posterior$population = factor(\n    per_population_posterior$population,\n    levels = ordered_populations \n)\n")),(0,o.kt)("p",null,"That's it!  (If you try ",(0,o.kt)("inlineCode",{parentName:"p"},"str(data)")," you'll see that the ",(0,o.kt)("inlineCode",{parentName:"p"},"population")," column is now a factor.)"),(0,o.kt)("p",null,"Now if you regenerate the above plot, things should be in order."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Question")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"In which populations is O blood group at lowest frequency?  In which populations at highest frequency?"))))}c.isMDXComponent=!0},8991:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/o_bld_group_posterior-c7f7194d0b37367d4df5740d7d45e457.png"},6768:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/o_bld_group_posterior_by_population-f64c81db09a8a89ce97383bf74c248a4.png"},1437:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/o_bld_group_posterior_by_population2-c2acf5695c27a069d9b5de55c618d623.png"}}]);