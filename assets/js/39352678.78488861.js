"use strict";(self.webpackChunkwhg_training_resources=self.webpackChunkwhg_training_resources||[]).push([[1060],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),u=o,g=d["".concat(l,".").concat(u)]||d[u]||m[u]||r;return n?a.createElement(g,s(s({ref:t},c),{},{components:n})):a.createElement(g,s({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2360:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),o=n(6010);const r={tabItem:"tabItem_OmH5"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,s),hidden:n},t)}},9877:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),o=n(7294),r=n(2389),s=n(7392),i=n(7094),l=n(2466),p=n(6010);const c={tabList:"tabList_uSqn",tabItem:"tabItem_LplD"};function d(e){const{lazy:t,block:n,defaultValue:r,values:d,groupId:m,className:u}=e,g=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=d??g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),f=(0,s.l)(h,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===r?r:r??g.find((e=>e.props.default))?.props.value??g[0]?.props.value;if(null!==v&&!h.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:b}=(0,i.U)(),[k,N]=(0,o.useState)(v),w=[],{blockElementScrollPositionUntilNextRender:_}=(0,l.o5)();if(null!=m){const e=y[m];null!=e&&e!==k&&h.some((t=>t.value===e))&&N(e)}const T=e=>{const t=e.currentTarget,n=w.indexOf(t),a=h[n].value;a!==k&&(_(t),N(a),null!=m&&b(m,a))},C=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=w.indexOf(e.currentTarget)+1;t=w[n]||w[0];break}case"ArrowLeft":{const n=w.indexOf(e.currentTarget)-1;t=w[n]||w[w.length-1];break}}t?.focus()};return o.createElement("div",{className:(0,p.Z)("tabs-container",c.tabList)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":n},u)},h.map((e=>{let{value:t,label:n,attributes:r}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,key:t,ref:e=>w.push(e),onKeyDown:C,onFocus:T,onClick:T},r,{className:(0,p.Z)("tabs__item",c.tabItem,r?.className,{"tabs__item--active":k===t})}),n??t)}))),t?(0,o.cloneElement)(g.filter((e=>e.props.value===k))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==k})))))}function m(e){const t=(0,r.Z)();return o.createElement(d,(0,a.Z)({key:String(t)},e))}},3106:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var a=n(7462),o=(n(7294),n(3905)),r=n(9877),s=n(2360);const i={sidebar_position:3},l="What's not a gene?",p={unversionedId:"programming/analysing_genes_across_species/Counting_genes_2",id:"programming/analysing_genes_across_species/Counting_genes_2",title:"What's not a gene?",description:'Above we counted all "genes".  But what exactly is a "gene"?',source:"@site/docs/programming/analysing_genes_across_species/003_Counting_genes_2.md",sourceDirName:"programming/analysing_genes_across_species",slug:"/programming/analysing_genes_across_species/Counting_genes_2",permalink:"/whg-training-resources/programming/analysing_genes_across_species/Counting_genes_2",draft:!1,editUrl:"https://github.com/whg-training/whg-training-resources/edit/main/docs/programming/analysing_genes_across_species/003_Counting_genes_2.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"sidebar5",previous:{title:"Counting genes",permalink:"/whg-training-resources/programming/analysing_genes_across_species/Counting_genes_1"},next:{title:"Filter, group, summarise, join, arrange...",permalink:"/whg-training-resources/programming/analysing_genes_across_species/filter_join_merge"}},c={},d=[{value:"Different types of gene",id:"different-types-of-gene",level:2},{value:"Aside on T and B cell receptors",id:"aside-on-t-and-b-cell-receptors",level:2}],m={toc:d},u="wrapper";function g(e){let{components:t,...i}=e;return(0,o.kt)(u,(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"whats-not-a-gene"},"What's not a gene?"),(0,o.kt)("p",null,'Above we counted all "genes".  But what exactly is a "gene"?'),(0,o.kt)("p",null,"One way to figure out what 'gene' means in these files, is to compare to the other record types in the data. For\nexample, you can find all the top-level record types (those with no ",(0,o.kt)("inlineCode",{parentName:"p"},"Parent"),") in the file like this:"),(0,o.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"sqlite",label:"sqlite3 code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"sqlite> SELECT dataset, type, COUNT(*) FROM gff WHERE Parent IS NULL GROUP BY dataset, type\n"))),(0,o.kt)(s.Z,{value:"R",label:"R code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},'(\n    dbGetQuery( db, "SELECT * FROM gff WHERE Parent IS NULL" )\n    %>% group_by( dataset, type )\n    %>% summarise( count = n() )\n)\n'))),(0,o.kt)(s.Z,{value:"dbplyR",label:"dbplyr code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"(\n    db\n    %>% tbl( 'gff' )\n    %>% filter( is.na(Parent ))\n    %>% group_by( dataset, type )\n    %>% summarise( count = n() )\n    %>% collect()\n)\n"))),(0,o.kt)(s.Z,{value:"python",label:"Python code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'types = pandas.read_sql(\n    "SELECT dataset, type, COUNT(*) FROM gff WHERE Parent IS NULL GROUP BY dataset, type",\n    db\n)\n')))),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"For the example above, and those from now on, we will assume you have already connected to the database ",(0,o.kt)("a",{parentName:"p",href:"/whg-training-resources/programming/analysing_genes_across_species/Counting_genes_1"},"as we did on\nthe previous page"),".  Depending on how you are running this, you can connect like this:"),(0,o.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"sqlite",label:"sqlite3 code",mdxType:"TabItem"},(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"sqlite3 genes.sqlite\nsqlite3> .mode column\nsqlite3> .header on\n"))),(0,o.kt)(s.Z,{value:"R",label:"R code",mdxType:"TabItem"},(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-r"},'library( RSQLite )\nlibrary( dplyr )\ndb = DBI::dbConnect( RSQLite::SQLite(), "genes.sqlite" )\n'))),(0,o.kt)(s.Z,{value:"python",label:"Python code",mdxType:"TabItem"},(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import pandas, sqlite3\ndb = sqlite3.connect( "genes.sqlite" )\n')))),(0,o.kt)("p",{parentName:"div"},"If not, please do that now and then re-run the above."))),(0,o.kt)("p",null,"Whichever way you do this, you should see that all the files have a bunch of records other than protein-coding genes.\nThere are, at least, ",(0,o.kt)("em",{parentName:"p"},"pseudogenes")," and ",(0,o.kt)("em",{parentName:"p"},"non-coding RNAs"),", as well as a bunch of so-called ",(0,o.kt)("em",{parentName:"p"},"biological regions")," and\n",(0,o.kt)("em",{parentName:"p"},"untranslated regions"),"."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Question")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"What are pseudogenes and non-coding RNAs anyway?  To see the technical definitions, look them up on ",(0,o.kt)("a",{parentName:"p",href:"http://www.sequenceontology.org/browser/obob.cgi"},"the sequence\nontology"),"."),(0,o.kt)("p",{parentName:"div"},"For more information, here is ",(0,o.kt)("a",{parentName:"p",href:"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3491395/"},"an interesting reference on\npseudogenes")," and on ",(0,o.kt)("a",{parentName:"p",href:"https://www.frontiersin.org/articles/10.3389/fgene.2015.00002/full"},"non-coding\nRNAs"),"."))),(0,o.kt)("h2",{id:"different-types-of-gene"},"Different types of gene"),(0,o.kt)("p",null,"What sets apart ",(0,o.kt)("em",{parentName:"p"},"genes")," from ",(0,o.kt)("em",{parentName:"p"},"pseudogenes")," and ",(0,o.kt)("em",{parentName:"p"},"non-coding RNAs")," is that they code for proteins. However, it's not quite\nthat simple. If you look more closely at the records with ",(0,o.kt)("inlineCode",{parentName:"p"},"type=gene"),", you'll see they have a number of different\n\"biotypes\" (which, if you've followed so far, you will have avialable in the ",(0,o.kt)("inlineCode",{parentName:"p"},"biotype")," column.)"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Challenge")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Extend the query above to count records by both ",(0,o.kt)("inlineCode",{parentName:"p"},"type")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"biotype"),".  "),(0,o.kt)("p",{parentName:"div"},"What types of gene record are there?  What types of non-coding RNA?  What types of pseudogene?"),(0,o.kt)("p",{parentName:"div"},"The ",(0,o.kt)("a",{parentName:"p",href:"http://www.sequenceontology.org/browser/obob.cgi"},"sequence ontology")," page is a good first place to look these up\nif you want to know more about them."))),(0,o.kt)("h2",{id:"aside-on-t-and-b-cell-receptors"},"Aside on T and B cell receptors"),(0,o.kt)("p",null,"One of the record types you'll see looks like genes called 'IG_C_gene', 'IG_D_gene', and so on.  And some are called\n'TR_C_gene' and so on."),(0,o.kt)("p",null,"These are ",(0,o.kt)("strong",{parentName:"p"},"immunoglobulin")," and ",(0,o.kt)("strong",{parentName:"p"},"T cell receptor")," gene segments respectively.  The mechanism that turns these gene\nsegments into functional, expressed genes that code for proteins - known as V(D)J recombination - is complex, and\ninvolves somatic structural variation that brings 'V_gene', 'J_gene', and at some loci 'D_gene' segments together to form\nfully functional genes.  This only happens in ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/B_cell"},"B cells")," and ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/T_cell"},"T\ncells")," and is a basic component of the adaptive immune system."),(0,o.kt)("p",null,"For example, here is a cartoon of the T cell receptor 'alpha' and 'delta' regions from the ",(0,o.kt)("a",{parentName:"p",href:"https://www.imgt.org/IMGTindex/factsbook.php"},"T cell Receptor Factsbook"),":"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:n(2608).Z,width:"1354",height:"462"})),(0,o.kt)("p",null,"The arrows underneath indicate a schema of how the 'V' and 'J' segments are joined together, or the 'V', 'D', and 'J' segments for the TRD genes.\nThe component genes are chosen randomly in each cell to generate a high level of receptor diversity.  "),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If that's not complicated enough - the diagram also shows that the TRD locus is situated inside the TRA locus.\nSometimes they also recombine together to make hybrid A/D genes."))),(0,o.kt)("p",null,"In any case - although these genes ",(0,o.kt)("em",{parentName:"p"},"do")," code for proteins, they aren't standard 'protein coding genes' in that they\ndon't form full genes in most cells - only after recombination in T and B cells.  For that reason they are seperated out\nfrom protain coding genes in the data."))}g.isMDXComponent=!0},2608:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/t_cell_receptors-18e8173d03aff0bcecebf031e3382e3b.png"}}]);