"use strict";(self.webpackChunkwhg_training_resources=self.webpackChunkwhg_training_resources||[]).push([[497],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,g=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(g,s(s({ref:t},p),{},{components:n})):a.createElement(g,s({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2360:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),r=n(6010);const o={tabItem:"tabItem_OmH5"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,s),hidden:n},t)}},9877:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),r=n(7294),o=n(2389),s=n(7392),i=n(7094),l=n(2466),c=n(6010);const p={tabList:"tabList_uSqn",tabItem:"tabItem_LplD"};function u(e){const{lazy:t,block:n,defaultValue:o,values:u,groupId:m,className:d}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=u??g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),b=(0,s.l)(h,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===o?o:o??g.find((e=>e.props.default))?.props.value??g[0]?.props.value;if(null!==f&&!h.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:_,setTabGroupChoices:y}=(0,i.U)(),[v,k]=(0,r.useState)(f),w=[],{blockElementScrollPositionUntilNextRender:x}=(0,l.o5)();if(null!=m){const e=_[m];null!=e&&e!==v&&h.some((t=>t.value===e))&&k(e)}const N=e=>{const t=e.currentTarget,n=w.indexOf(t),a=h[n].value;a!==v&&(x(t),k(a),null!=m&&y(m,a))},T=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=w.indexOf(e.currentTarget)+1;t=w[n]||w[0];break}case"ArrowLeft":{const n=w.indexOf(e.currentTarget)-1;t=w[n]||w[w.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,c.Z)("tabs-container",p.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":n},d)},h.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,key:t,ref:e=>w.push(e),onKeyDown:T,onFocus:N,onClick:N},o,{className:(0,c.Z)("tabs__item",p.tabItem,o?.className,{"tabs__item--active":v===t})}),n??t)}))),t?(0,r.cloneElement)(g.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}function m(e){const t=(0,o.Z)();return r.createElement(u,(0,a.Z)({key:String(t)},e))}},6227:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var a=n(7462),r=(n(7294),n(3905)),o=n(9877),s=n(2360);const i={sidebar_position:4},l="The number of exons",c={unversionedId:"programming/analysing_genes_across_species/extreme_genes/how_many_exons",id:"programming/analysing_genes_across_species/extreme_genes/how_many_exons",title:"The number of exons",description:"If you follow steps similar to the above, you ought to know how you could also add columns to the dataset reflecting the",source:"@site/docs/programming/analysing_genes_across_species/extreme_genes/004_how_many_exons.md",sourceDirName:"programming/analysing_genes_across_species/extreme_genes",slug:"/programming/analysing_genes_across_species/extreme_genes/how_many_exons",permalink:"/whg-training-resources/programming/analysing_genes_across_species/extreme_genes/how_many_exons",draft:!1,editUrl:"https://github.com/whg-training/whg-training-resources/edit/main/docs/programming/analysing_genes_across_species/extreme_genes/004_how_many_exons.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"sidebar5",previous:{title:"Picking a 'canonical' transcript",permalink:"/whg-training-resources/programming/analysing_genes_across_species/extreme_genes/canonical_transcripts"},next:{title:"Extreme genes revisited",permalink:"/whg-training-resources/programming/analysing_genes_across_species/extreme_genes/extreme_genes_revisited"}},p={},u=[],m={toc:u},d="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"the-number-of-exons"},"The number of exons"),(0,r.kt)("p",null,"If you follow steps similar to the above, you ought to know how you could also add columns to the dataset reflecting the\n",(0,r.kt)("strong",{parentName:"p"},"number of exons")," in each gene. has (in its canonical transcript).  "),(0,r.kt)("p",null,"For example you could do it like this:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Load the exon data from the gff file (they have ",(0,r.kt)("inlineCode",{parentName:"li"},"type == 'exon'"),")."),(0,r.kt)("li",{parentName:"ul"},"join it to the canonical transcripts table, by ",(0,r.kt)("inlineCode",{parentName:"li"},"dataset")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"transcript_id"),"."),(0,r.kt)("li",{parentName:"ul"},"Now re-do your join of the genes table to the canonical transcripts table.")),(0,r.kt)("p",null,"Good luck!"),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Solutions")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You should ",(0,r.kt)("strong",{parentName:"p"},"definitely do this yourself"),".  But if you get stuck, here is a solution."),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"hint",label:"Reveal?",mdxType:"TabItem"},(0,r.kt)("p",{parentName:"div"},"Click the tab above to see some hints and a solution.")),(0,r.kt)(s.Z,{value:"1",label:"Hints",mdxType:"TabItem"},(0,r.kt)("p",{parentName:"div"},"Are you sure you want to see hints?  Here are some:"),(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Load the exon data, but make sure to rename columns like we did for ",(0,r.kt)("a",{parentName:"p",href:"/whg-training-resources/programming/analysing_genes_across_species/extreme_genes/long_genes_2"},"transcripts")," so they don't\nget muddled up when you join.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Join to the transcripts table by ",(0,r.kt)("inlineCode",{parentName:"p"},"transcript_id"),", just as we did for ",(0,r.kt)("a",{parentName:"p",href:"/whg-training-resources/programming/analysing_genes_across_species/extreme_genes/long_genes_2#computing-coding-length"},"CDS records"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"group_by( dataset, transcript_id )")," to group by transcript, and then ",(0,r.kt)("inlineCode",{parentName:"p"},"summarise( number_of_exons = n() )")," to count exons per transcript.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Finally use a ",(0,r.kt)("inlineCode",{parentName:"p"},"left_join()")," to add the column to the genes file.  ",(0,r.kt)("strong",{parentName:"p"},"Note"),". The transcript ID column in the ",(0,r.kt)("inlineCode",{parentName:"p"},"genes"),"\ndataframe is called ",(0,r.kt)("inlineCode",{parentName:"p"},"canonical_transcript_id"),", but ",(0,r.kt)("inlineCode",{parentName:"p"},"transcript_id")," in the transcripts table.  You may have to rename\nthis column, or else use the ",(0,r.kt)("a",{parentName:"p",href:"https://dplyr.tidyverse.org/reference/join_by.html"},"dplyr ",(0,r.kt)("inlineCode",{parentName:"a"},"join_by()"))," function to\ncomplete the join.")))),(0,r.kt)(s.Z,{value:"2",label:"Solution",mdxType:"TabItem"},(0,r.kt)("p",{parentName:"div"},"Here was my solution:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-r"},"# Load exon data\nexons = (\n    db\n    %>% tbl( \"gff\" )\n    %>% filter( type == 'exon' )\n    %>% select( dataset, exon_id = ID, transcript_id = Parent, exon_seqid, exon_start = start, exon_end = end )\n    %>% collect()\n)\n\n# Link to transcripts\ntranscripts_and_exons = inner_join( transcripts, exons, by = c( \"dataset\", \"transcript_id\" ))\n\n# Count exons\nexon_counts = (\n    transcripts_and_exons\n    %>% group_by( dataset, transcript_id )\n    %>% summarise( number_of_exons = n() )\n)\n\n# Link to genes\ngenes = left_join(\n    genes,\n    exon_counts,\n    by = join_by(\n        dataset == 'dataset',\n        canonical_transcript_id == 'transcript_id'\n    )\n)\n\n")),(0,r.kt)("p",{parentName:"div"},"The only bit of that we didn't do before was the last one - where I used two different columns names\n('canonical_transcript_id' and 'transcript_id') to join the data frames.  Dplyr has a\n",(0,r.kt)("a",{parentName:"p",href:"https://dplyr.tidyverse.org/reference/join_by.html"},(0,r.kt)("inlineCode",{parentName:"a"},"join_by()"))," function to do this.  (Another way would have been to\nrename the columns first.)"))))))}g.isMDXComponent=!0}}]);